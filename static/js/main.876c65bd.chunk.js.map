{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","branding","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","isShowing","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","bind","float","color","marginRight","Contacts","Fragment","contacts_Contact","deleteContactHandler","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","proptypes","PropTypes","string","isRequired","func","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","body","console","log","fetch","then","response","json","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.876c65bd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\n\nconst Header = (props) => {\n  return (\n    <nav className = \"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">{props.branding}</a>\n            <div>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\">Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\">Add</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\">About</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n        \n    </nav>\n  )\n    \n  \n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            }\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            }\n\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n            }\n        default: \n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n          dispatch: action => {\n              this.setState(state => reducer(state,action))\n          }\n    }\n\n    async componentDidMount() {\n       const res = await axios.get('https://jsonplaceholder.typicode.com/users'); \n       this.setState({contacts: res.data});\n    }\n\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\nclass Contact extends Component {\n\n  state = {\n    isShowing: false\n  }\n\n  onShowClick = () => {\n    this.setState({\n      isShowing: !this.state.isShowing\n    })\n  }\n\n\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete('https://jsonplaceholder.typicode.com/users/' + id);\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    } catch (e) {\n      dispatch({type: 'DELETE_CONTACT', payload: id}) \n    }\n       \n  }\n\n  render() {\n\n    const {id, name, email, phone} = this.props.contact;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n              <div className=\"container card card-body mb-3\">\n              <h4>{name} \n                <i onClick={this.onShowClick} className='fas fa-sort-down' style={{cursor: 'pointer'}}/>\n                <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className='fas fa-times' style={{cursor:'pointer', float: 'right', color: 'red'}} />\n                <Link to={`contact/edit/${id}`} >\n                  <i \n                  className=\"fas fa-pencil-alt\"\n                  style={{\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'black',\n                    marginRight: '1rem'\n                  }}\n                  ></i>\n                </Link>\n              </h4>\n                  {this.state.isShowing ?\n               <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n               </ul> : null\n            }\n        </div>\n\n          )\n        }}\n      </Consumer>\n      \n    )\n  }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n}\n \nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n    \n  render() {\n\n\n    return(\n        <Consumer>\n            {value => {\n                const {contacts} = value;\n                return(\n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n                        {contacts.map(contact => (\n                        <Contact key={contact.id} contact={contact} deleteContactHandler={this.deleteContactHandler} />\n                        ))}\n                    </React.Fragment>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nfunction TextInputGroup({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n\n}) {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                className={classnames(\"form-control form-control-lg\", {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                name={name}\n                value={value}\n                onChange={onChange}\n            />\n            {error &&\n            <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\nTextInputGroup.proptypes ={\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {\n\n        }\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        if(name === '') {\n            this.setState({errors: {name: 'Name is required'}})\n            return;\n        }\n        if(email === '') {\n            this.setState({errors: {email:'Email is required'}})\n            return;\n        }\n        if(phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}})\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone,\n        }\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        \n        dispatch({type: 'ADD_CONTACT', payload: res.data})\n\n        this.setState({\n            name: '',\n            email:'',\n            phone:'',\n            errors:''\n        })\n        this.props.history.push('/');\n\n    }\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                    value={name}\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    placeholder=\"Enter Name\"\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                    />\n                                    <TextInputGroup \n                                    value={email}\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Email\"\n                                    onChange={this.onChange}\n                                    type='email'\n                                    error={errors.email}\n                                    />\n                                    <TextInputGroup \n                                    value={phone}\n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    placeholder=\"Enter Phone\"\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\n                                </form>\n                            </div>\n                        </div>\n\n                    )\n                }}\n\n\n            </Consumer>\n        )\n    }\n}\n\n\nexport default AddContact;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n        <h1 className=\"display-4\">About Contact Manager</h1>\n        <p className=\"lead\">Simple app to manage contacts</p>\n        <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1> \n      <p className=\"lead\">Sorry, the page is not found</p> \n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    }\n    componentDidMount() {\n        console.log(\"component did mount\");\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n        .then(response => response.json())\n        .then(json => this.setState({\n            title: json.title,\n            body: json.body\n        }))\n    }\n\n    // componentWillMount() {\n    //     console.log('component will mount');\n    // }\n\n    // componentDidUpdate() {\n    //     console.log('component did update')\n    // }\n\n  render() {\n      const {title, body} = this.state;\n\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\n\nexport default Test;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {\n\n        }\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        if(name === '') {\n            this.setState({errors: {name: 'Name is required'}})\n            return;\n        }\n        if(email === '') {\n            this.setState({errors: {email:'Email is required'}})\n            return;\n        }\n        if(phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}})\n            return;\n        }\n        const { id } = this.props.match.params;\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n        this.setState({\n            name: '',\n            email:'',\n            phone:'',\n            errors:''\n        })\n        this.props.history.push('/');\n\n    }\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                    value={name}\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    placeholder=\"Enter Name\"\n                                    onChange={this.onChange}\n                                    error={errors.name}\n                                    />\n                                    <TextInputGroup \n                                    value={email}\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    placeholder=\"Enter Email\"\n                                    onChange={this.onChange}\n                                    type='email'\n                                    error={errors.email}\n                                    />\n                                    <TextInputGroup \n                                    value={phone}\n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    placeholder=\"Enter Phone\"\n                                    onChange={this.onChange}\n                                    error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\n                                </form>\n                            </div>\n                        </div>\n\n                    )\n                }}\n\n\n            </Consumer>\n        )\n    }\n}\n\n\nexport default EditContact;","import React, { Component } from 'react';\n//import Contact from './components/Contacts';\nimport Header from './components/layout/Header';\n//import Footer from './components/Footer';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport { Provider } from './context';\nimport AddContact from './components/contacts/AddContact';\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} /> \n              </Switch>\n            </div>\n\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}